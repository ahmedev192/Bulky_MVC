// <auto-generated />
using System;
using Bulky.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240807155105_temp data ")]
    partial class tempdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Bulky.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Aqidah (Creed)"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Hadith"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Fiqh (Jurisprudence)"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Tafsir (Quranic Exegesis)"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Spirituality"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Tech City",
                            Name = "Tech Solution",
                            PhoneNumber = "6669990000",
                            PostalCode = "12121",
                            State = "IL",
                            StreetAddress = "123 Tech St"
                        },
                        new
                        {
                            Id = 2,
                            City = "Vid City",
                            Name = "Vivid Books",
                            PhoneNumber = "7779990000",
                            PostalCode = "66666",
                            State = "IL",
                            StreetAddress = "999 Vid St"
                        },
                        new
                        {
                            Id = 3,
                            City = "Lala land",
                            Name = "Readers Club",
                            PhoneNumber = "1113335555",
                            PostalCode = "99999",
                            State = "NY",
                            StreetAddress = "999 Main St"
                        });
                });

            modelBuilder.Entity("Bulky.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderHeaderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Bulky.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("float");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("PaymentDueDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Imam Nawawi",
                            CategoryId = 2,
                            Description = "A collection of hadith compiled by Imam Nawawi.",
                            ISBN = "9781591440425",
                            ListPrice = 24.989999999999998,
                            Price = 22.989999999999998,
                            Price100 = 19.989999999999998,
                            Price50 = 21.989999999999998,
                            Title = "Riyad as-Salihin"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Imam Bukhari",
                            CategoryId = 2,
                            Description = "A book on Islamic manners compiled by Imam Bukhari.",
                            ISBN = "9781591440715",
                            ListPrice = 19.989999999999998,
                            Price = 17.989999999999998,
                            Price100 = 15.99,
                            Price50 = 16.989999999999998,
                            Title = "Al-Adab Al-Mufrad"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Imam Al-Ghazali",
                            CategoryId = 5,
                            Description = "A seminal work on Islamic spirituality by Imam Al-Ghazali.",
                            ISBN = "9781903682417",
                            ListPrice = 34.990000000000002,
                            Price = 32.990000000000002,
                            Price100 = 28.989999999999998,
                            Price50 = 30.989999999999998,
                            Title = "Ihya Ulum al-Din"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Imam Bukhari",
                            CategoryId = 2,
                            Description = "One of the most authentic collections of hadith in Islam.",
                            ISBN = "9781591440487",
                            ListPrice = 29.989999999999998,
                            Price = 27.989999999999998,
                            Price100 = 23.989999999999998,
                            Price50 = 25.989999999999998,
                            Title = "Sahih al-Bukhari"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Imam Malik",
                            CategoryId = 3,
                            Description = "A book of hadith and Islamic jurisprudence compiled by Imam Malik.",
                            ISBN = "9781591440821",
                            ListPrice = 24.989999999999998,
                            Price = 22.989999999999998,
                            Price100 = 19.989999999999998,
                            Price50 = 21.989999999999998,
                            Title = "Al-Muwatta"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Jalal ad-Din al-Mahalli & Jalal ad-Din as-Suyuti",
                            CategoryId = 4,
                            Description = "A classical commentary on the Quran by Jalal ad-Din al-Mahalli and Jalal ad-Din as-Suyuti.",
                            ISBN = "9781842000871",
                            ListPrice = 39.990000000000002,
                            Price = 37.990000000000002,
                            Price100 = 33.990000000000002,
                            Price50 = 35.990000000000002,
                            Title = "Tafsir al-Jalalayn"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Ibn Hajar al-Asqalani",
                            CategoryId = 2,
                            Description = "A comprehensive commentary on Sahih al-Bukhari by Ibn Hajar al-Asqalani.",
                            ISBN = "9781591440029",
                            ListPrice = 49.990000000000002,
                            Price = 47.990000000000002,
                            Price100 = 43.990000000000002,
                            Price50 = 45.990000000000002,
                            Title = "Fath al-Bari"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Imam Nawawi",
                            CategoryId = 2,
                            Description = "A collection of forty important hadith compiled by Imam Nawawi.",
                            ISBN = "9781591440586",
                            ListPrice = 12.99,
                            Price = 11.99,
                            Price100 = 9.9900000000000002,
                            Price50 = 10.99,
                            Title = "The Forty Hadith"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Ibn Rajab al-Hanbali, Ibn al-Qayyim, and Imam al-Ghazali",
                            CategoryId = 5,
                            Description = "A book on Islamic spirituality by Ibn Rajab al-Hanbali, Ibn al-Qayyim, and Imam al-Ghazali.",
                            ISBN = "9781591440548",
                            ListPrice = 14.99,
                            Price = 13.99,
                            Price100 = 11.99,
                            Price50 = 12.99,
                            Title = "The Purification of the Soul"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Muhammad ibn Abd al-Wahhab",
                            CategoryId = 1,
                            Description = "A book on the oneness of God by Muhammad ibn Abd al-Wahhab.",
                            ISBN = "9789960897313",
                            ListPrice = 19.989999999999998,
                            Price = 17.989999999999998,
                            Price100 = 15.99,
                            Price50 = 16.989999999999998,
                            Title = "Kitab al-Tawhid"
                        });
                });

            modelBuilder.Entity("Bulky.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/images/products/riyad-salehen.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/images/products/Al-Adab Al-Mufrad.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/images/products/Ihya Ulum al-Din.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "/images/products/Sahih al-Bukhari.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "/images/products/Al-Muwatta.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "/images/products/Tafsir al-Jalalayn.png",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "/images/products/Fath al-Bari.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "/images/products/The Forty Hadith.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "/images/products/The Purification of the Soul.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "/images/products/Kitab al-Tawhid.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "/images/products/riyad-salehen.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "/images/products/Al-Adab Al-Mufrad.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "/images/products/Ihya Ulum al-Din.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "/images/products/Sahih al-Bukhari.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "/images/products/Al-Muwatta.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "/images/products/Tafsir al-Jalalayn.png",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 17,
                            ImageUrl = "/images/products/Fath al-Bari.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 18,
                            ImageUrl = "/images/products/The Forty Hadith.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 19,
                            ImageUrl = "/images/products/The Purification of the Soul.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 20,
                            ImageUrl = "/images/products/Kitab al-Tawhid.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 21,
                            ImageUrl = "/images/products/riyad-salehen.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 22,
                            ImageUrl = "/images/products/Al-Adab Al-Mufrad.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 23,
                            ImageUrl = "/images/products/Ihya Ulum al-Din.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 24,
                            ImageUrl = "/images/products/Sahih al-Bukhari.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 25,
                            ImageUrl = "/images/products/Al-Muwatta.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 26,
                            ImageUrl = "/images/products/Tafsir al-Jalalayn.png",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 27,
                            ImageUrl = "/images/products/Fath al-Bari.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 28,
                            ImageUrl = "/images/products/The Forty Hadith.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 29,
                            ImageUrl = "/images/products/The Purification of the Soul.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 30,
                            ImageUrl = "/images/products/Kitab al-Tawhid.jpg",
                            ProductId = 10
                        });
                });

            modelBuilder.Entity("Bulky.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Bulky.Models.ApplicationUser", b =>
                {
                    b.HasOne("Bulky.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Bulky.Models.OrderDetail", b =>
                {
                    b.HasOne("Bulky.Models.OrderHeader", "OrderHeader")
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bulky.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderHeader");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Bulky.Models.OrderHeader", b =>
                {
                    b.HasOne("Bulky.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.HasOne("Bulky.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Bulky.Models.ProductImage", b =>
                {
                    b.HasOne("Bulky.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Bulky.Models.ShoppingCart", b =>
                {
                    b.HasOne("Bulky.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bulky.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Bulky.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Bulky.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bulky.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Bulky.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
